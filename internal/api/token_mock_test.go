// Code generated by MockGen. DO NOT EDIT.
// Source: ITokenValidation.go

// Package api is a generated GoMock package.
package api

import (
	context "context"
	tokenvalidation "ewallet-ums/cmd/proto/tokenvalidation"
	helpers "ewallet-ums/helpers"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockITokenValidationHandler is a mock of ITokenValidationHandler interface.
type MockITokenValidationHandler struct {
	ctrl     *gomock.Controller
	recorder *MockITokenValidationHandlerMockRecorder
}

// MockITokenValidationHandlerMockRecorder is the mock recorder for MockITokenValidationHandler.
type MockITokenValidationHandlerMockRecorder struct {
	mock *MockITokenValidationHandler
}

// NewMockITokenValidationHandler creates a new mock instance.
func NewMockITokenValidationHandler(ctrl *gomock.Controller) *MockITokenValidationHandler {
	mock := &MockITokenValidationHandler{ctrl: ctrl}
	mock.recorder = &MockITokenValidationHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITokenValidationHandler) EXPECT() *MockITokenValidationHandlerMockRecorder {
	return m.recorder
}

// ValidateToken mocks base method.
func (m *MockITokenValidationHandler) ValidateToken(ctx context.Context, req *tokenvalidation.TokenRequest) (*tokenvalidation.TokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", ctx, req)
	ret0, _ := ret[0].(*tokenvalidation.TokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockITokenValidationHandlerMockRecorder) ValidateToken(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockITokenValidationHandler)(nil).ValidateToken), ctx, req)
}

// MockITokenValidationService is a mock of ITokenValidationService interface.
type MockITokenValidationService struct {
	ctrl     *gomock.Controller
	recorder *MockITokenValidationServiceMockRecorder
}

// MockITokenValidationServiceMockRecorder is the mock recorder for MockITokenValidationService.
type MockITokenValidationServiceMockRecorder struct {
	mock *MockITokenValidationService
}

// NewMockITokenValidationService creates a new mock instance.
func NewMockITokenValidationService(ctrl *gomock.Controller) *MockITokenValidationService {
	mock := &MockITokenValidationService{ctrl: ctrl}
	mock.recorder = &MockITokenValidationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITokenValidationService) EXPECT() *MockITokenValidationServiceMockRecorder {
	return m.recorder
}

// TokenValidation mocks base method.
func (m *MockITokenValidationService) TokenValidation(ctx context.Context, token string) (*helpers.ClaimToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TokenValidation", ctx, token)
	ret0, _ := ret[0].(*helpers.ClaimToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TokenValidation indicates an expected call of TokenValidation.
func (mr *MockITokenValidationServiceMockRecorder) TokenValidation(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TokenValidation", reflect.TypeOf((*MockITokenValidationService)(nil).TokenValidation), ctx, token)
}
