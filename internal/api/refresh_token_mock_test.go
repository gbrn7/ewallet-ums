// Code generated by MockGen. DO NOT EDIT.
// Source: IRefreshToken.go

// Package api is a generated GoMock package.
package api

import (
	context "context"
	helpers "ewallet-ums/helpers"
	models "ewallet-ums/internal/models"
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockIRefrehTokenService is a mock of IRefrehTokenService interface.
type MockIRefrehTokenService struct {
	ctrl     *gomock.Controller
	recorder *MockIRefrehTokenServiceMockRecorder
}

// MockIRefrehTokenServiceMockRecorder is the mock recorder for MockIRefrehTokenService.
type MockIRefrehTokenServiceMockRecorder struct {
	mock *MockIRefrehTokenService
}

// NewMockIRefrehTokenService creates a new mock instance.
func NewMockIRefrehTokenService(ctrl *gomock.Controller) *MockIRefrehTokenService {
	mock := &MockIRefrehTokenService{ctrl: ctrl}
	mock.recorder = &MockIRefrehTokenServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRefrehTokenService) EXPECT() *MockIRefrehTokenServiceMockRecorder {
	return m.recorder
}

// RefreshToken mocks base method.
func (m *MockIRefrehTokenService) RefreshToken(ctx context.Context, refreshToken string, tokenClaim helpers.ClaimToken) (models.RefreshTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RefreshToken", ctx, refreshToken, tokenClaim)
	ret0, _ := ret[0].(models.RefreshTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RefreshToken indicates an expected call of RefreshToken.
func (mr *MockIRefrehTokenServiceMockRecorder) RefreshToken(ctx, refreshToken, tokenClaim interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshToken", reflect.TypeOf((*MockIRefrehTokenService)(nil).RefreshToken), ctx, refreshToken, tokenClaim)
}

// MockIRefreshTokenHandler is a mock of IRefreshTokenHandler interface.
type MockIRefreshTokenHandler struct {
	ctrl     *gomock.Controller
	recorder *MockIRefreshTokenHandlerMockRecorder
}

// MockIRefreshTokenHandlerMockRecorder is the mock recorder for MockIRefreshTokenHandler.
type MockIRefreshTokenHandlerMockRecorder struct {
	mock *MockIRefreshTokenHandler
}

// NewMockIRefreshTokenHandler creates a new mock instance.
func NewMockIRefreshTokenHandler(ctrl *gomock.Controller) *MockIRefreshTokenHandler {
	mock := &MockIRefreshTokenHandler{ctrl: ctrl}
	mock.recorder = &MockIRefreshTokenHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRefreshTokenHandler) EXPECT() *MockIRefreshTokenHandlerMockRecorder {
	return m.recorder
}

// RefreshToken mocks base method.
func (m *MockIRefreshTokenHandler) RefreshToken(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RefreshToken", arg0)
}

// RefreshToken indicates an expected call of RefreshToken.
func (mr *MockIRefreshTokenHandlerMockRecorder) RefreshToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshToken", reflect.TypeOf((*MockIRefreshTokenHandler)(nil).RefreshToken), arg0)
}
