// Code generated by MockGen. DO NOT EDIT.
// Source: IExternalWallet.go

// Package services is a generated GoMock package.
package services

import (
	context "context"
	external "ewallet-ums/external"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIExternal is a mock of IExternal interface.
type MockIExternal struct {
	ctrl     *gomock.Controller
	recorder *MockIExternalMockRecorder
}

// MockIExternalMockRecorder is the mock recorder for MockIExternal.
type MockIExternalMockRecorder struct {
	mock *MockIExternal
}

// NewMockIExternal creates a new mock instance.
func NewMockIExternal(ctrl *gomock.Controller) *MockIExternal {
	mock := &MockIExternal{ctrl: ctrl}
	mock.recorder = &MockIExternalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIExternal) EXPECT() *MockIExternalMockRecorder {
	return m.recorder
}

// CreateWallet mocks base method.
func (m *MockIExternal) CreateWallet(ctx context.Context, userID uint64) (*external.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWallet", ctx, userID)
	ret0, _ := ret[0].(*external.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWallet indicates an expected call of CreateWallet.
func (mr *MockIExternalMockRecorder) CreateWallet(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWallet", reflect.TypeOf((*MockIExternal)(nil).CreateWallet), ctx, userID)
}

// SendNotification mocks base method.
func (m *MockIExternal) SendNotification(ctx context.Context, recipient, templateName string, placeHolder map[string]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendNotification", ctx, recipient, templateName, placeHolder)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendNotification indicates an expected call of SendNotification.
func (mr *MockIExternalMockRecorder) SendNotification(ctx, recipient, templateName, placeHolder interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendNotification", reflect.TypeOf((*MockIExternal)(nil).SendNotification), ctx, recipient, templateName, placeHolder)
}
